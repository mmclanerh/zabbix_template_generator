<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>2.0</version>
    <date>2016-05-09T17:28:17Z</date>
    <groups>
        <group>
            <name>RD</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>RD <%= microservice.capitalize %> Template</template>
            <name>RD <%= microservice.capitalize %> Template</name>
            <groups>
                <group>
                    <name>RD</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name><%= microservice.capitalize %></name>
                </application>
                <application>
                    <name>HealthCheck</name>
                </application>
            </applications>
            <items>
                <item>
                    <name><%= microservice.capitalize %> Healthcheck</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>web.page.regexp[localhost,healthcheck,<%= adminport %>,\{.*]</key>
                    <delay>60</delay>
                    <history>180</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>HealthCheck</name>
                        </application>
                    </applications>
                    <valuemap/>
                </item>
                <item>
                    <name><%= microservice.capitalize %> Healthcheck Ping</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>web.page.regexp[localhost,ping,<%= adminport %>,\pong]</key>
                    <delay>60</delay>
                    <history>180</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>HealthCheck</name>
                        </application>
                    </applications>
                    <valuemap/>
                </item><% ports.each do |p| %> 
                <item>
                    <name><%= microservice.capitalize %> LISTEN port <%= p %></name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>net.tcp.listen[<%= p %>]</key>
                    <delay>60</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>3</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Sanity check if the port is being listened on</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name><%= microservice.capitalize %></name>
                        </application>
                    </applications>
                    <valuemap/>
                </item><% end %>
                <item>
                    <name><%= microservice.capitalize %> process: Memory Size</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>proc.mem[java,,,<%= microservice %>.jar]</key>
                    <delay>60</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Monitoring the memory used by the <%= microservice %> process</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name><%= microservice.capitalize %></name>
                        </application>
                    </applications>
                    <valuemap/>
                </item>
                <item>
                    <name><%= microservice.capitalize %> process count</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>proc.num[java,,,<%= microservice %>.jar]</key>
                    <delay>60</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Check for the <%= microservice %> service to be running on the <%= microservice %> instance.&#13;
&#13;
Returns a zero (0) if not present and a one (1) if the process is running</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name><%= microservice.capitalize %></name>
                        </application>
                    </applications>
                    <valuemap/>
                </item>
                <item>
                    <name><%= microservice.capitalize %> service: HTTP Response Check</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>net.tcp.service[http,,<%= adminport %>]</key>
                    <delay>60</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>3</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Test to verify that HTTP connection can be made to <%= microservice %> service over port <%= adminport %>.&#13;
&#13;
The value passed is zero (0) if no response or one (1) if responding</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name><%= microservice.capitalize %></name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                </item>
                <item>
                    <name><%= microservice.capitalize %> service: Installed Version</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>system.sw.packages[<%= microservice %>,rpm,short]</key>
                    <delay>86400</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Checks rpm -qa for the installed package for <%= microservice %>, i.e.:&#13;
&#13;
<%= microservice %>-2.1.8-1.noarch&#13;
&#13;
Checks once a day.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name><%= microservice.capitalize %></name>
                        </application>
                    </applications>
                    <valuemap/>
                </item>
                <item>
                    <name><%= microservice.capitalize %> service: Response Time Check (s)</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>web.page.perf[localhost,healthcheck,<%= adminport %>]</key>
                    <delay>60</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>s</units>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Response time in milliseconds for the <%= microservice %> service to respond to a HTTP request on port <%= adminport %></description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>HealthCheck</name>
                        </application>
                    </applications>
                    <valuemap/>
                </item>
            </items>
            <discovery_rules/>
            <macros/>
            <templates/>
            <screens/>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{RD <%= microservice.capitalize %> Template:web.page.perf[localhost,healthcheck,<%= adminport %>].max(120)}&gt;30</expression>
            <name><%= microservice.capitalize %> Healthcheck Response Time too high</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{RD <%= microservice.capitalize %> Template:web.page.regexp[localhost,healthcheck,<%= adminport %>,\{.*].str(&quot;{\&quot;deadlocks\&quot;:{\&quot;healthy\&quot;:true},\&quot;mongoHealthCheck\&quot;:{\&quot;healthy\&quot;:true}}&quot;)}=0</expression>
            <name><%= microservice.capitalize %> Healthcheck Status</name>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{RD <%= microservice.capitalize %> Template:web.page.regexp[localhost,ping,<%= adminport %>,\pong].str(pong)}=0</expression>
            <name><%= microservice.capitalize %> PingHealthcheck Status</name>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <dependencies/>
        </trigger><% ports.each do |p| %>
        <trigger>
            <expression>{RD <%= microservice.capitalize %> Template:net.tcp.listen[<%= p %>].last()}=0</expression>
            <name>Port 25200 unreachable</name>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description/>
            <type>0</type>
            <dependencies/>
        </trigger><% end %>
    </triggers>
</zabbix_export>
